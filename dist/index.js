"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.userStates = exports.bot = void 0;
require("dotenv/config.js");
const telegraf_1 = require("telegraf");
const fitnessTest_1 = require("./components/fitnessTest");
const menu_1 = require("./components/menu");
const database_1 = require("./database/database");
const types_1 = require("./types");
exports.bot = new telegraf_1.Telegraf(process.env.BOT_TOKEN);
exports.userStates = new Map();
exports.bot.start((ctx) => __awaiter(void 0, void 0, void 0, function* () {
    const userId = ctx.from.id.toString();
    yield (0, database_1.setupDb)();
    const userExists = yield (0, database_1.checkUserExists)(userId);
    if (userExists) {
        ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äì —Ñ–∏—Ç–Ω–µ—Å—Å –ø–æ–º–æ—â–Ω–∏–∫ –¢—Ä–µ–π–Ω–∏.\n–†–∞–¥ —Å–Ω–æ–≤–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', telegraf_1.Markup.inlineKeyboard([
            [telegraf_1.Markup.button.callback('ü•ë –ü—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ –±–ª—é–¥–∞', types_1.SEND_PHOTO)],
            [telegraf_1.Markup.button.callback('‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', types_1.EDIT_DATA)],
            [telegraf_1.Markup.button.callback('üîÑ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞', types_1.START_TEST)]
        ]));
    }
    else {
        ctx.replyWithMarkdown('–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äì —Ñ–∏—Ç–Ω–µ—Å—Å –ø–æ–º–æ—â–Ω–∏–∫ –¢—Ä–µ–π–Ω–∏.\n–ù–∞–ø–∏—à—É —Ç–µ–±–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–∏—Ç–∞–Ω–∏—è –∏ –ø–æ–º–æ–≥—É –µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.\n\n–ù–æ –ø—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–Ω–µ–º —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ.', telegraf_1.Markup.inlineKeyboard([
            telegraf_1.Markup.button.callback('–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç', types_1.START_TEST)
        ]));
    }
}));
(0, fitnessTest_1.registerFitnessTestActions)(exports.bot);
(0, menu_1.registerFitnessMenuActions)(exports.bot);
(0, database_1.setupDb)().then(() => {
    exports.bot.launch();
    console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');
});
